/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SelectGameJoinTypeImport } from './routes/select-game-join-type'
import { Route as JoinGameImport } from './routes/join-game'
import { Route as HostGameImport } from './routes/host-game'
import { Route as IndexImport } from './routes/index'
import { Route as ExposedLobbyImport } from './routes/exposed/lobby'

// Create/Update Routes

const SelectGameJoinTypeRoute = SelectGameJoinTypeImport.update({
  id: '/select-game-join-type',
  path: '/select-game-join-type',
  getParentRoute: () => rootRoute,
} as any)

const JoinGameRoute = JoinGameImport.update({
  id: '/join-game',
  path: '/join-game',
  getParentRoute: () => rootRoute,
} as any)

const HostGameRoute = HostGameImport.update({
  id: '/host-game',
  path: '/host-game',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExposedLobbyRoute = ExposedLobbyImport.update({
  id: '/exposed/lobby',
  path: '/exposed/lobby',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/host-game': {
      id: '/host-game'
      path: '/host-game'
      fullPath: '/host-game'
      preLoaderRoute: typeof HostGameImport
      parentRoute: typeof rootRoute
    }
    '/join-game': {
      id: '/join-game'
      path: '/join-game'
      fullPath: '/join-game'
      preLoaderRoute: typeof JoinGameImport
      parentRoute: typeof rootRoute
    }
    '/select-game-join-type': {
      id: '/select-game-join-type'
      path: '/select-game-join-type'
      fullPath: '/select-game-join-type'
      preLoaderRoute: typeof SelectGameJoinTypeImport
      parentRoute: typeof rootRoute
    }
    '/exposed/lobby': {
      id: '/exposed/lobby'
      path: '/exposed/lobby'
      fullPath: '/exposed/lobby'
      preLoaderRoute: typeof ExposedLobbyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/host-game': typeof HostGameRoute
  '/join-game': typeof JoinGameRoute
  '/select-game-join-type': typeof SelectGameJoinTypeRoute
  '/exposed/lobby': typeof ExposedLobbyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/host-game': typeof HostGameRoute
  '/join-game': typeof JoinGameRoute
  '/select-game-join-type': typeof SelectGameJoinTypeRoute
  '/exposed/lobby': typeof ExposedLobbyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/host-game': typeof HostGameRoute
  '/join-game': typeof JoinGameRoute
  '/select-game-join-type': typeof SelectGameJoinTypeRoute
  '/exposed/lobby': typeof ExposedLobbyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/host-game'
    | '/join-game'
    | '/select-game-join-type'
    | '/exposed/lobby'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/host-game'
    | '/join-game'
    | '/select-game-join-type'
    | '/exposed/lobby'
  id:
    | '__root__'
    | '/'
    | '/host-game'
    | '/join-game'
    | '/select-game-join-type'
    | '/exposed/lobby'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HostGameRoute: typeof HostGameRoute
  JoinGameRoute: typeof JoinGameRoute
  SelectGameJoinTypeRoute: typeof SelectGameJoinTypeRoute
  ExposedLobbyRoute: typeof ExposedLobbyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HostGameRoute: HostGameRoute,
  JoinGameRoute: JoinGameRoute,
  SelectGameJoinTypeRoute: SelectGameJoinTypeRoute,
  ExposedLobbyRoute: ExposedLobbyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/host-game",
        "/join-game",
        "/select-game-join-type",
        "/exposed/lobby"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/host-game": {
      "filePath": "host-game.tsx"
    },
    "/join-game": {
      "filePath": "join-game.tsx"
    },
    "/select-game-join-type": {
      "filePath": "select-game-join-type.tsx"
    },
    "/exposed/lobby": {
      "filePath": "exposed/lobby.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
