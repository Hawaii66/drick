/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ErrorImport } from './routes/error'
import { Route as ExposedRouteImport } from './routes/exposed/route'
import { Route as IndexImport } from './routes/index'
import { Route as ExposedSelectGameJoinTypeImport } from './routes/exposed/select-game-join-type'
import { Route as ExposedJoinGameImport } from './routes/exposed/join-game'
import { Route as ExposedHostGameImport } from './routes/exposed/host-game'
import { Route as ExposedActiveLobbyImport } from './routes/exposed/active/lobby'
import { Route as ExposedActivePinImport } from './routes/exposed/active/$pin'

// Create/Update Routes

const ErrorRoute = ErrorImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRoute,
} as any)

const ExposedRouteRoute = ExposedRouteImport.update({
  id: '/exposed',
  path: '/exposed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExposedSelectGameJoinTypeRoute = ExposedSelectGameJoinTypeImport.update({
  id: '/select-game-join-type',
  path: '/select-game-join-type',
  getParentRoute: () => ExposedRouteRoute,
} as any)

const ExposedJoinGameRoute = ExposedJoinGameImport.update({
  id: '/join-game',
  path: '/join-game',
  getParentRoute: () => ExposedRouteRoute,
} as any)

const ExposedHostGameRoute = ExposedHostGameImport.update({
  id: '/host-game',
  path: '/host-game',
  getParentRoute: () => ExposedRouteRoute,
} as any)

const ExposedActiveLobbyRoute = ExposedActiveLobbyImport.update({
  id: '/active/lobby',
  path: '/active/lobby',
  getParentRoute: () => ExposedRouteRoute,
} as any)

const ExposedActivePinRoute = ExposedActivePinImport.update({
  id: '/active/$pin',
  path: '/active/$pin',
  getParentRoute: () => ExposedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/exposed': {
      id: '/exposed'
      path: '/exposed'
      fullPath: '/exposed'
      preLoaderRoute: typeof ExposedRouteImport
      parentRoute: typeof rootRoute
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorImport
      parentRoute: typeof rootRoute
    }
    '/exposed/host-game': {
      id: '/exposed/host-game'
      path: '/host-game'
      fullPath: '/exposed/host-game'
      preLoaderRoute: typeof ExposedHostGameImport
      parentRoute: typeof ExposedRouteImport
    }
    '/exposed/join-game': {
      id: '/exposed/join-game'
      path: '/join-game'
      fullPath: '/exposed/join-game'
      preLoaderRoute: typeof ExposedJoinGameImport
      parentRoute: typeof ExposedRouteImport
    }
    '/exposed/select-game-join-type': {
      id: '/exposed/select-game-join-type'
      path: '/select-game-join-type'
      fullPath: '/exposed/select-game-join-type'
      preLoaderRoute: typeof ExposedSelectGameJoinTypeImport
      parentRoute: typeof ExposedRouteImport
    }
    '/exposed/active/$pin': {
      id: '/exposed/active/$pin'
      path: '/active/$pin'
      fullPath: '/exposed/active/$pin'
      preLoaderRoute: typeof ExposedActivePinImport
      parentRoute: typeof ExposedRouteImport
    }
    '/exposed/active/lobby': {
      id: '/exposed/active/lobby'
      path: '/active/lobby'
      fullPath: '/exposed/active/lobby'
      preLoaderRoute: typeof ExposedActiveLobbyImport
      parentRoute: typeof ExposedRouteImport
    }
  }
}

// Create and export the route tree

interface ExposedRouteRouteChildren {
  ExposedHostGameRoute: typeof ExposedHostGameRoute
  ExposedJoinGameRoute: typeof ExposedJoinGameRoute
  ExposedSelectGameJoinTypeRoute: typeof ExposedSelectGameJoinTypeRoute
  ExposedActivePinRoute: typeof ExposedActivePinRoute
  ExposedActiveLobbyRoute: typeof ExposedActiveLobbyRoute
}

const ExposedRouteRouteChildren: ExposedRouteRouteChildren = {
  ExposedHostGameRoute: ExposedHostGameRoute,
  ExposedJoinGameRoute: ExposedJoinGameRoute,
  ExposedSelectGameJoinTypeRoute: ExposedSelectGameJoinTypeRoute,
  ExposedActivePinRoute: ExposedActivePinRoute,
  ExposedActiveLobbyRoute: ExposedActiveLobbyRoute,
}

const ExposedRouteRouteWithChildren = ExposedRouteRoute._addFileChildren(
  ExposedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/exposed': typeof ExposedRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/exposed/host-game': typeof ExposedHostGameRoute
  '/exposed/join-game': typeof ExposedJoinGameRoute
  '/exposed/select-game-join-type': typeof ExposedSelectGameJoinTypeRoute
  '/exposed/active/$pin': typeof ExposedActivePinRoute
  '/exposed/active/lobby': typeof ExposedActiveLobbyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/exposed': typeof ExposedRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/exposed/host-game': typeof ExposedHostGameRoute
  '/exposed/join-game': typeof ExposedJoinGameRoute
  '/exposed/select-game-join-type': typeof ExposedSelectGameJoinTypeRoute
  '/exposed/active/$pin': typeof ExposedActivePinRoute
  '/exposed/active/lobby': typeof ExposedActiveLobbyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/exposed': typeof ExposedRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/exposed/host-game': typeof ExposedHostGameRoute
  '/exposed/join-game': typeof ExposedJoinGameRoute
  '/exposed/select-game-join-type': typeof ExposedSelectGameJoinTypeRoute
  '/exposed/active/$pin': typeof ExposedActivePinRoute
  '/exposed/active/lobby': typeof ExposedActiveLobbyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/exposed'
    | '/error'
    | '/exposed/host-game'
    | '/exposed/join-game'
    | '/exposed/select-game-join-type'
    | '/exposed/active/$pin'
    | '/exposed/active/lobby'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/exposed'
    | '/error'
    | '/exposed/host-game'
    | '/exposed/join-game'
    | '/exposed/select-game-join-type'
    | '/exposed/active/$pin'
    | '/exposed/active/lobby'
  id:
    | '__root__'
    | '/'
    | '/exposed'
    | '/error'
    | '/exposed/host-game'
    | '/exposed/join-game'
    | '/exposed/select-game-join-type'
    | '/exposed/active/$pin'
    | '/exposed/active/lobby'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExposedRouteRoute: typeof ExposedRouteRouteWithChildren
  ErrorRoute: typeof ErrorRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExposedRouteRoute: ExposedRouteRouteWithChildren,
  ErrorRoute: ErrorRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/exposed",
        "/error"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/exposed": {
      "filePath": "exposed/route.tsx",
      "children": [
        "/exposed/host-game",
        "/exposed/join-game",
        "/exposed/select-game-join-type",
        "/exposed/active/$pin",
        "/exposed/active/lobby"
      ]
    },
    "/error": {
      "filePath": "error.tsx"
    },
    "/exposed/host-game": {
      "filePath": "exposed/host-game.tsx",
      "parent": "/exposed"
    },
    "/exposed/join-game": {
      "filePath": "exposed/join-game.tsx",
      "parent": "/exposed"
    },
    "/exposed/select-game-join-type": {
      "filePath": "exposed/select-game-join-type.tsx",
      "parent": "/exposed"
    },
    "/exposed/active/$pin": {
      "filePath": "exposed/active/$pin.tsx",
      "parent": "/exposed"
    },
    "/exposed/active/lobby": {
      "filePath": "exposed/active/lobby.tsx",
      "parent": "/exposed"
    }
  }
}
ROUTE_MANIFEST_END */
